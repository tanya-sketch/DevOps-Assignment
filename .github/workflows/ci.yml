name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Change based on your project

      - name: Install frontend dependencies
        run: |
          cd frontend  # Update this based on your folder structure
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run backend tests
        run: |
          cd backend
          npm test

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: backend  # Ensure only the backend directory is analyzed
          args: >
            -Dsonar.organization=tanya-sketch
            -Dsonar.projectKey=tanya-sketch_DevOps-Assignment
            -Dsonar.sources=backend  # Set to analyze only the backend directory
            -Dsonar.tests=backend/tests  # Set to analyze only the test directory within backend
            -Dsonar.exclusions=**/*.test.js  # Exclude test files from production analysis
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov-report/lcov-report.json  # Use Jest's LCOV coverage report
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # SonarQube Analysis (Optional)
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@v2
      #   with:
      #     projectBaseDir: backend  # Adjust if needed
      #     args: >
      #       -Dsonar.organization=tanya-sketch
      #       -Dsonar.projectKey=tanya-sketch_DevOps-Assignment
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Snyk Security Scan
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Sentry Release (If Using Sentry)
      - name: Create Sentry Release
        uses: getsentry/action-release@v1
        with:
          environment: production
          version: ${{ github.sha }}
          projects: your-sentry-project
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: your-org
          SENTRY_PROJECT: your-sentry-project

